{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webpack-starters/./src/classes/Basic.js","webpack://webpack-starters/./src/classes/MetaTag.js","webpack://webpack-starters/./src/classes/Heading.js","webpack://webpack-starters/./src/classes/Core/Seo.js","webpack://webpack-starters/./src/classes/Ssl.js","webpack://webpack-starters/./src/index.js","webpack://webpack-starters/./src/classes/Core/View.js"],"sourcesContent":["export default class BasicComp {\n    constructor(props) {\n    }\n\n    Run(content) {\n        let li = document.createElement('li')\n        li.setAttribute('class', \"item true\")\n        let head = document.createElement('div')\n        head.classList.add('head')\n        head.innerHTML = \"وجود lang برای تگ html\"\n        li.appendChild(head)\n        let htmltag = content.getElementsByTagName('html')[0].getAttribute('lang');\n\n        if (!htmltag) {\n            li.classList.replace('true', 'false')\n            head.innerHTML = \"لطفا تگ lang را به html اضافه کنید\"\n        }\n\n        document.getElementById('list').append(li)\n    }\n\n}","export default class MetaTag {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl\n    }\n\n    GetMeta(metaName) {\n        const metas = this.baseUrl.getElementsByTagName('meta');\n\n        for (let i = 0; i < metas.length; i++) {\n            if (metas[i].getAttribute('name') === metaName) {\n                return true;\n            }\n        }\n\n        return '';\n    }\n\n    Run() {\n        /////////////////// Meta Tag Description\n        const metaDesc = this.GetMeta('description')\n\n        const metaDescLi = document.createElement('li')\n        metaDescLi.setAttribute('class', \"item true\")\n\n        const metaDescHead = document.createElement('div')\n        metaDescHead.classList.add('head')\n        metaDescHead.innerHTML += 'وجود متا تگ Description';\n        metaDescLi.appendChild(metaDescHead)\n\n        if (!metaDesc) {\n            metaDescLi.classList.replace('true', 'false')\n            metaDescHead.innerHTML = \"متا تگ Description را به صفحه اضافه کنید\"\n        }\n\n\n        /////////////////// Meta Tag View Port\n        const metaViewport = this.GetMeta('viewport')\n\n        const metaViewLi = document.createElement('li')\n        metaViewLi.setAttribute('class', \"item true\")\n\n        const metaViewHead = document.createElement('div')\n        metaViewHead.classList.add('head')\n        metaViewHead.innerHTML += 'وجود متا تگ viewoprt';\n        metaViewLi.appendChild(metaViewHead)\n\n        if (!metaViewport) {\n            metaViewLi.classList.replace('true', 'false')\n            metaViewHead.innerHTML = \"متا تگ viewport را به صفحه\"\n        }\n\n        /////////////////// Meta Tag keyword\n        const metaKeyword = this.GetMeta('keyword')\n\n        const metaKeuwordLi = document.createElement('li')\n        metaKeuwordLi.setAttribute('class', \"item true\")\n\n        const metaKeuwordHead = document.createElement('div')\n        metaKeuwordHead.classList.add('head')\n        metaKeuwordHead.innerHTML += \"وجود متا تگ keyword\"\n        metaKeuwordLi.appendChild(metaKeuwordHead)\n\n        if (!metaKeyword) {\n            metaKeuwordLi.classList.replace('true', 'false')\n            metaKeuwordHead.innerHTML = \"متا تگ keyword را به صفحه اضافه کنید\"\n        }\n\n\n        document.getElementById('list').append(metaDescLi, metaViewLi, metaKeuwordLi)\n    }\n}","export default class Heading {\n    constructor(htmlContent) {\n        this.content = htmlContent\n    }\n    getHeading(tag) {\n        const tagLenght = this.content.querySelectorAll(tag).length\n\n        const li = document.createElement('li')\n        li.setAttribute('class', 'item true')\n\n        const head = document.createElement('div')\n        head.classList.add('head')\n        head.innerHTML += \"تعداد تگ \" + tag + \" در صفحه : \" + tagLenght\n\n        li.append(head)\n        if (tagLenght == 0) {\n            li.classList.replace('true', 'false')\n        }\n        document.getElementById('list').append(li)\n    }\n\n\n    Run() {\n        const setH1 = this.getHeading(\"h1\");\n        const setH2 = this.getHeading(\"h2\");\n        const setH3 = this.getHeading(\"h3\");\n        const setH4 = this.getHeading(\"h4\");\n        const setH5 = this.getHeading(\"h5\");\n        const setH6 = this.getHeading(\"h6\");\n    }\n}","import BasicComp from \"../Basic\";\nimport MetaTag from \"../MetaTag\";\nimport Heading from \"../Heading\";\n\nexport default class Seo {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl\n        this.Classes = [BasicComp]\n    }\n\n    httpGet() {\n        fetch(this.baseUrl).then((res) => {\n            return res.text()\n        }).then(html => {\n            // console.log(res2);\n            this.trace(html)\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    trace(content) {\n        const parse = new DOMParser()\n        const html = parse.parseFromString(content, \"text/html\")\n        document.getElementById('urlTitle').innerHTML = html.title\n\n        ///////////////// Check Basic SEO\n        const BasicCheck = new BasicComp\n        BasicCheck.Run(html)\n\n        ///////////////// check Meta Tags\n        const MetaTags = new MetaTag\n        MetaTags.constructor(html)\n        MetaTags.Run()\n\n\n        ///////////////// Heading\n        const CheckHeading = new Heading\n        CheckHeading.constructor(html)\n        CheckHeading.Run()\n    }\n}","export default class Ssl {\n    Run(value) {\n        const urlSsl = value.includes(\"https\")\n\n        const li = document.createElement('li')\n        li.setAttribute('class', 'item true')\n\n        const head = document.createElement('div')\n        head.classList.add('head')\n        head.innerHTML += \"SSL وبسایت فعال است\"\n\n        li.append(head)\n        if (!urlSsl) {\n            li.classList.includes('true', 'false')\n            head.innerHTML = 'SSL وبسایت را فعال کنید'\n        }\n        document.getElementById('list').append(li)\n    }\n}","import \"./style.scss\";\nimport View from \"./classes/Core/View\";\n\nconst fff = new View()\nfff.Run()\n\n\nconst elvenShieldRecipe = {\n  leatherStrips: 2,\n  ironIngot: 1,\n  refinedMoonstone: 4,\n};\n\n// ES7 Object spread example\nconst elvenGauntletsRecipe = {\n  ...elvenShieldRecipe,\n  leather: 1,\n  refinedMoonstone: 1,\n};\nconsole.log(\"ES7 Object spread example: \", elvenGauntletsRecipe);\n","import Seo from \"./Seo\"\nimport Ssl from \"../Ssl\"\n\nexport default class View {\n    Run() {\n        let hero = document.createElement('div')\n        hero.classList.add('hero')\n\n        let form = document.createElement('form')\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n        })\n        let input = document.createElement('input')\n        input.placeholder = \"نام دامنه را وارد کنید\"\n        input.value = \"https://fartech.ir/\"\n        input.classList.add('input')\n\n\n        let btn = document.createElement('span')\n        btn.classList.add('submit')\n        btn.addEventListener('click', () => {\n            const seoRun = new Seo(input.value);\n            seoRun.constructor(input.value)\n            seoRun.httpGet()\n\n            ///////////////// check SSL\n            const checkSsl = new Ssl\n            checkSsl.Run(input.value)\n        })\n        let btnIcon = document.createElement('i')\n        btnIcon.setAttribute('class', 'icon icon-search')\n        btn.append(btnIcon)\n\n        form.append(input, btn)\n        hero.append(form)\n\n        let list = document.createElement('ul')\n        list.id = 'list'\n\n\n        let title = document.createElement('span')\n        title.id = 'urlTitle'\n\n        window.addEventListener('load', () => {\n            input.focus();\n        })\n\n        document.getElementById('body').append(hero, title, list)\n    }\n\n}"],"names":["BasicComp","props","content","li","document","createElement","setAttribute","head","classList","add","innerHTML","appendChild","getElementsByTagName","getAttribute","replace","getElementById","append","MetaTag","baseUrl","this","metaName","metas","i","length","metaDesc","GetMeta","metaDescLi","metaDescHead","metaViewport","metaViewLi","metaViewHead","metaKeyword","metaKeuwordLi","metaKeuwordHead","Heading","htmlContent","tag","tagLenght","querySelectorAll","getHeading","Seo","Classes","fetch","then","res","text","html","trace","catch","err","console","log","DOMParser","parseFromString","title","Run","MetaTags","constructor","CheckHeading","Ssl","value","urlSsl","includes","View","hero","form","addEventListener","e","preventDefault","input","placeholder","btn","seoRun","httpGet","btnIcon","list","id","window","focus","elvenGauntletsRecipe","leatherStrips","ironIngot","refinedMoonstone","leather"],"sourceRoot":""}